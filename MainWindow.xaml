<Window x:Class="EQD2Converter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EQD2Converter"
        mc:Ignorable="d"
        Title="EQD2Converter" Height="450" Width="800" Background="AliceBlue" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="10,0,10,0" />
        </Style>
        <Style x:Key="DataGridContentCellCentering" TargetType="DataGridCell">
            <Style.Resources>
                <Style TargetType="ContentPresenter">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}"/>
        <Style TargetType="{x:Type Label}"/>
        <Style TargetType="{x:Type Border}"/>
        <Style TargetType="{x:Type CheckBox}"/>
        <Style TargetType="{x:Type DataGrid}"/>
        <Style TargetType="{x:Type ToolTip}"/>
        <Style TargetType="{x:Type TextBlock}"/>
        <Style TargetType="{x:Type StackPanel}"/>
        <Style TargetType="{x:Type GroupBox}"/>
        <Style TargetType="{x:Type ScrollBar}"/>
        <Style TargetType="{x:Type TabControl}"/>
        <Style TargetType="{x:Type TabItem}"/>
        <Style TargetType="{x:Type TextBox}"/>
    </Window.Resources>

    <Grid HorizontalAlignment="Stretch" Margin="10,10,10,10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="33"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0">
            <Label Content="Alpha/Beta order:" VerticalAlignment="Center"></Label>
            <ComboBox x:Name="ComboBox" Width="100" Height="30" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            <Label Content="Convert to:" VerticalAlignment="Center"></Label>
            <ComboBox x:Name="ComboBox2" Width="80" Height="30" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            <Button Margin="10,0,0,0"  Height="30" Width="200" Content="Create plan..." Click="Button_Click"></Button>
            <Button Margin="10,0,0,0"  Height="30" Width="100" Content="Preview" Click="Button_Click_1"></Button>
            <Label x:Name="Count"></Label>
        </StackPanel>

        <Grid Grid.Row="1" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <DataGrid Margin="0,10,10,10" Grid.Column="0" x:Name="DataGrid1" IsReadOnly="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" CanUserDeleteRows="False" HorizontalAlignment="Left" Height="Auto" MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualHeight}"  VerticalAlignment="Top" Width="500" AutoGenerateColumns="False" VerticalScrollBarVisibility="Visible"  SourceUpdated="DataGrid_SourceUpdated">
                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Header="Structure" Width="70*" Binding="{Binding Structure, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}"/>
                    <DataGridTextColumn IsReadOnly="False" Header="Alpha/Beta" Width="30*" Binding="{Binding AlphaBeta, Mode=TwoWay, NotifyOnTargetUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <EventSetter Event="TextChanged" Handler="OnTextChanged" />
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
        </Grid>
    </Grid>
</Window>
