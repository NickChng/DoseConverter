<Window x:Class="EQD2Converter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EQD2Converter"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:ViewModel, IsDesignTimeCreatable=True}"
        Title="Dose Converter v1.0" Height="600" Width="950" Background="White" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize">
    <Window.Resources>
        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="XAMLDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type Button}"/>
            <Style TargetType="{x:Type Label}"/>
            <Style TargetType="{x:Type Border}"/>
            <Style TargetType="{x:Type CheckBox}"/>
            <Style TargetType="{x:Type DataGrid}"/>
            <Style TargetType="{x:Type ToolTip}"/>
            <Style TargetType="{x:Type TextBlock}"/>
            <Style TargetType="{x:Type StackPanel}"/>
            <Style TargetType="{x:Type GroupBox}"/>
            <Style TargetType="{x:Type ScrollBar}"/>
            <Style TargetType="{x:Type TabControl}"/>
            <Style TargetType="{x:Type TabItem}"/>
            <Style TargetType="{x:Type TextBox}"/>
            <local:VisibilityConverter x:Key="VisibilityConverter"/>
            <local:VisibilityMultiConverter x:Key="VisibilityMultiConverter"/>
            <local:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Grid HorizontalAlignment="Stretch" Margin="10,10,10,10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <TextBlock Text="NoPAUSE - Dose Conversion Tool"></TextBlock>
                <TextBlock Text="EVALUATION ONLY" Margin="10,0,0,0" Foreground="Tomato" FontWeight="Bold"></TextBlock>
            </StackPanel>
            <Border Grid.Row="1" HorizontalAlignment="Stretch" Height="1" CornerRadius="4,4,4,4" Background="Black" Margin="0,5,0,5"/>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0">
                    <Label  Content="Select source dose distribution" VerticalAlignment="Bottom"></Label>
                    <Button Name="DoseSelectionInfoButton" Command="{Binding DoseSelectionInfoButtonCommand}" Style="{StaticResource ButtonStyle_Small}">
                        <Image Source="Resources/circle-info-solid.png"/>
                    </Button>
                    <Popup Name="DoseSelectionInfoButtonPopup" PlacementTarget="{Binding ElementName=DoseSelectionInfoButton}" Placement="Right" StaysOpen="False"
                           AllowsTransparency="True" PopupAnimation="Fade" IsOpen="{Binding isDoseSelectionInfoOpen, UpdateSourceTrigger=PropertyChanged}">
                        <local:DescriptionView HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" DataContext="{Binding DoseDescriptionViewModel}"/>
                    </Popup>
                </StackPanel>
                <ComboBox Grid.Row="1" Style="{StaticResource ComboBoxStyle}" Template="{StaticResource ComboBoxControlTemplate}" Height="30" ItemsSource="{Binding PlanInputOptions}" 
                          IsEnabled="{Binding NoFatalErrorOccurred, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedInputOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayString}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <Grid Grid.Column="1" Margin="5,0,5,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0">
                    <Label Grid.Row="0" Content="Convert to" VerticalAlignment="Bottom" HorizontalAlignment="Center"></Label>
                    <Button Name="ConvertToSelectionInfoButton" Command="{Binding ConvertToInfoButtonCommand}" Style="{StaticResource ButtonStyle_Small}">
                        <Image Source="Resources/circle-info-solid.png"/>
                    </Button>
                    <Popup Name="ConvertToSelectionInfoPopup" PlacementTarget="{Binding ElementName=ConvertToSelectionInfoButton}" Placement="Right" StaysOpen="False"
                           AllowsTransparency="True" PopupAnimation="Fade" IsOpen="{Binding isConvertToInfoOpen, UpdateSourceTrigger=PropertyChanged}">
                        <local:DescriptionView HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" DataContext="{Binding ConvertToDescriptionViewModel}"/>
                    </Popup>
                </StackPanel>
                <ComboBox Grid.Row="1" Height="30" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                      Style="{StaticResource ComboBoxStyle}"
                      Template="{StaticResource ComboBoxControlTemplate}"
                      IsEnabled="{Binding NoFatalErrorOccurred, UpdateSourceTrigger=PropertyChanged}"
                      VerticalContentAlignment="Center" ItemsSource="{Binding DoseOutputFormatOptions}" SelectedItem="{Binding SelectedOutputFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=., Converter={StaticResource EnumDescriptionConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <Grid Grid.Column="2" Margin="5,0,5,0" Visibility="{Binding ShowN2Fractions, UpdateSourceTrigger=PropertyChanged}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="in # fx" VerticalAlignment="Bottom"/>
                <TextBox Grid.Row="1" Text="{Binding convParameterString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" IsEnabled="{Binding NoFatalErrorOccurred, UpdateSourceTrigger=PropertyChanged}"
                         Height="30" VerticalContentAlignment="Center" Margin="0,1,0,-1" Background="{Binding convParameterTextBoxStatusColor, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="DarkOrange" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>
            <Grid Grid.Column="3" Margin="5,0,5,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="Output Plan Name:" VerticalAlignment="Center" HorizontalAlignment="Left" HorizontalContentAlignment="Left"/>
                <TextBox Grid.Row="1" Text="{Binding ConvertedPlanName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Background="{Binding ConvertedPlanNameBackgroundColor, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{Binding NoFatalErrorOccurred, UpdateSourceTrigger=PropertyChanged}" Width="110" Height="30" HorizontalAlignment="Left" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"/>
            </Grid>
            <Grid Grid.Column="4" Margin="5,0,5,0">
                <TextBlock Text="{Binding ConversionInputWarning, UpdateSourceTrigger=PropertyChanged}" Foreground="DarkSalmon" HorizontalAlignment="Center"
                           VerticalAlignment="Center" FontSize="11" TextWrapping="Wrap"/>
            </Grid>


            <!--<Button Margin="10,0,0,0"  Height="30" Width="60" Content="Help" HorizontalAlignment="Right" Command="{Binding buttonHelpCommand}"></Button>-->
        </Grid>
        <Grid Grid.Row="2" HorizontalAlignment="Stretch" Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="41*"/>
                <ColumnDefinition Width="24*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Label Content="Conversion is only performed on included structures, prioritizing those on top in the case of overlap. Converted dose elsewhere is zero." FontStyle="Italic" VerticalAlignment="Center" FontSize="10" Grid.ColumnSpan="2"/>
            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="Auto" MaxWidth="90"/>
                    <ColumnDefinition Width="Auto" MaxWidth="110"/>
                    <ColumnDefinition Width="Auto" MaxWidth="80"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Background="CornflowerBlue" CornerRadius="4" Margin="5,0,5,0">
                    <TextBlock Text="Include" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold"/>
                </Border>
                <Border Grid.Column="1" Background="CornflowerBlue" CornerRadius="4" Margin="5,0,5,0">
                    <TextBlock Text="Priority" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold"/>
                </Border>
                <Border Grid.Column="2" Background="CornflowerBlue" CornerRadius="4" Margin="5,0,5,0">
                    <TextBlock Text="Structure Id" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold"/>
                </Border>
                <Border Grid.Column="3" Background="CornflowerBlue" CornerRadius="4" Margin="5,0,5,0">
                    <Button HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" Command="{Binding button_ToggleAlphaBetaOrderCommand}">
                        <TextBlock Text="Alpha/Beta" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold" Margin="5,0,5,0"/>
                    </Button>
                </Border>
                <Border Grid.Column="4" Background="CornflowerBlue" CornerRadius="4" Margin="5,0,5,0" Visibility="{Binding ShowMaxEQD2, UpdateSourceTrigger=PropertyChanged}" Width="80">
                    <TextBlock Text="Max EQD2" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold" Margin="5,0,5,0" />
                </Border>
                <StackPanel Grid.Column="5" Orientation="Horizontal" Margin="5,0,0,0" Visibility="{Binding ShowMaxEQD2, UpdateSourceTrigger=PropertyChanged}" Width="110">
                    <Border Background="CornflowerBlue" CornerRadius="4"  Width="80">
                        <TextBlock Text="{Binding DisplayMaxGy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold" Margin="5,0,5,0" />
                    </Border>
                    <Button Name="MaxDoseInfoButton" Command="{Binding MaxDoseInfoButtonCommand}" Style="{StaticResource ButtonStyle_Small}" HorizontalAlignment="Left">
                        <Image Source="Resources/circle-info-solid.png"/>
                    </Button>
                    <Popup PlacementTarget="{Binding ElementName=MaxDoseInfoButton}" Placement="Right" StaysOpen="False"
                           AllowsTransparency="True" PopupAnimation="Fade" IsOpen="{Binding isMaxDoseInfoOpen, UpdateSourceTrigger=PropertyChanged}">
                        <local:DescriptionView HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" DataContext="{Binding MaxDoseInfoDescriptionViewModel}"/>
                    </Popup>
                </StackPanel>
                <StackPanel Grid.Column="6" Orientation="Horizontal" Margin="5,0,0,0" Width="75">
                    <Border Background="CornflowerBlue" CornerRadius="4"  Width="50">
                        <TextBlock Text="+Edges" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold" Margin="5,0,5,0" />
                    </Border>
                    <Button Name="IncludeEdgesInfoButton" Command="{Binding IncludeEdgesInfoButtonCommand}" Style="{StaticResource ButtonStyle_Small}" HorizontalAlignment="Left">
                        <Image Source="Resources/circle-info-solid.png"/>
                    </Button>
                    <Popup PlacementTarget="{Binding ElementName=MaxDoseInfoButton}" Placement="Right" StaysOpen="False"
                           AllowsTransparency="True" PopupAnimation="Fade" IsOpen="{Binding isIncludeEdgesInfoOpen, UpdateSourceTrigger=PropertyChanged}">
                        <local:DescriptionView HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" DataContext="{Binding IncludeEdgesInfoDescriptionViewModel}"/>
                    </Popup>
                </StackPanel>
                <Border Grid.Column="7" Background="CornflowerBlue" CornerRadius="4" Margin="5,0,5,0">
                    <TextBlock Text="Structure Label" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold"/>
                </Border>
            </Grid>
            <ScrollViewer Grid.Row="2" Grid.ColumnSpan="2" Focusable="true" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" HorizontalAlignment="Stretch"
                              Template="{DynamicResource ScrollViewerControlTemplate1}" CanContentScroll="True" Background="Transparent" Visibility="{Binding ProtocolVisibility, UpdateSourceTrigger=PropertyChanged}">
                <ListView Grid.Row="2" Grid.ColumnSpan="2" Name="StructureListView" ItemsSource="{Binding AlphaBetaMappings, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Style="{x:Null}"
                      SelectedItem="{Binding SelectedMapping, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedIndex}" dd:DragDrop.IsDragSource="True" HorizontalContentAlignment="Stretch" AlternationCount="2" ItemContainerStyle="{StaticResource DraggableListViewItemStyle}" 
                      DragDrop.DragOver="DragConstraint_ListView_DragOver" DragDrop.Drop="DragConstraint_Drop" MouseLeave="Constraint_ListView_MouseLeave" >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="90"/>
                                    <ColumnDefinition Width="Auto" MaxWidth="90"/>
                                    <ColumnDefinition Width="Auto" MaxWidth="110"/>
                                    <ColumnDefinition Width="Auto" MaxWidth="80"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Command="{Binding ToggleIncludeCommand}" Style="{StaticResource ButtonStyle_Small}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image RenderOptions.BitmapScalingMode="HighQuality">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Include, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                                        <Setter Property="Source" Value="Resources/appbar.add.png"/>
                                                        <Setter Property="ToolTip" Value="Include structure in conversion"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Include, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                        <Setter Property="Source" Value="Resources/x.png"/>
                                                        <Setter Property="ToolTip" Value="Remove structure from conversion"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>
                                <Grid Grid.Column="1">
                                    <Image Name ="DragImage" Grid.Column="0" Height="20" Width="18" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality" ToolTip="Drag to up or down to change priority" VerticalAlignment="Center"
                                                               HorizontalAlignment="Center" MouseDown="DragConstraint_MouseDown">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Include, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                                        <Setter Property="Source" Value="Resources/align_grey.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Include, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                        <Setter Property="Source" Value="Resources/align.png"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Grid>
                                <TextBlock Grid.Column="2" Text="{Binding StructureId}" VerticalAlignment="Center" Margin="5,0,0,0">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                    <Setter Property="TextBlock.Foreground" Value="LightSlateGray"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBox Grid.Column="3" Text="{Binding AlphaBetaRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Include, UpdateSourceTrigger=PropertyChanged}"
                                     Padding="5,0,5,0"  HorizontalAlignment="Center" Margin="0,0,10,0" VerticalAlignment="Center">
                                    <TextBox.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                    <Setter Property="TextBlock.Foreground" Value="LightSlateGray"></Setter>
                                                    <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <Grid Grid.Column="4" Margin="5,0,0,0" Width="90" HorizontalAlignment="Center" 
                                  Visibility="{Binding DataContext.ShowMaxEQD2, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ListView}}, UpdateSourceTrigger=PropertyChanged}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding MaxEQD2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width ="35" IsEnabled="{Binding Include, UpdateSourceTrigger=PropertyChanged}"
                                     Padding="5,0,5,0"  HorizontalAlignment="Right" VerticalAlignment="Center" HorizontalContentAlignment="Center">
                                        <TextBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                        <Setter Property="TextBlock.Foreground" Value="LightSlateGray"></Setter>
                                                        <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Label Grid.Column="1" Content="Gy2" HorizontalAlignment="Center">
                                        <Label.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                        <Setter Property="TextBlock.Foreground" Value="LightSlateGray"></Setter>
                                                        <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                </Grid>
                                <Grid Grid.Column="5" Margin="5,0,0,0" Width="110" HorizontalAlignment="Center" 
                                  Visibility="{Binding DataContext.ShowMaxEQD2, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ListView}}, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock Text="{Binding DisplayMaxEQD2inBEDn2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Include, UpdateSourceTrigger=PropertyChanged}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                        <Setter Property="TextBlock.Foreground" Value="LightSlateGray"></Setter>
                                                        <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                                <Grid Grid.Column="6" Margin="5,0,0,0" Width="80" HorizontalAlignment="Center">
                                    <CheckBox IsChecked="{Binding IncludeEdges, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0">
                                        <CheckBox.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                        <Setter Property="TextBlock.Foreground" Value="LightSlateGray"></Setter>
                                                        <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                </Grid>
                                <TextBlock Grid.Column="7" Text="{Binding StructureLabel}"  VerticalAlignment="Center" Margin="5,0,0,0">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                    <Setter Property="TextBlock.Foreground" Value="LightSlateGray"></Setter>
                                                    <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Include, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="3" Margin="0,0,0,0" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Column="0" VerticalContentAlignment="Stretch" Header="Status" VerticalAlignment="Center" >
                <Grid VerticalAlignment="Center" Margin="0,0,0,0">
                    <ProgressBar  Name="ProgressBar" Height="25" Margin="0,0,0,0" VerticalAlignment="Center"  HorizontalAlignment="Stretch" Template="{StaticResource ProgressBarNC}" IsIndeterminate="True" 
                        Visibility="{Binding Working,UpdateSourceTrigger=PropertyChanged, FallbackValue=true, Converter={StaticResource VisibilityConverter}}" />

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" ToolTip="{Binding StatusDetails, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="13" Text="{Binding StatusMessage, FallbackValue=StatusMessage, UpdateSourceTrigger=PropertyChanged}" Margin="10,3,10,3"/>
                        <Grid Visibility="{Binding SuccessVisibility, UpdateSourceTrigger=PropertyChanged}">
                            <Ellipse Height="20" Width="20" Fill="PaleGreen"/>
                            <Image Source="Resources/check_trans_light.png" Height="15" Width="15"/>
                        </Grid>
                        <Grid Visibility="{Binding ErrorVisibility, UpdateSourceTrigger=PropertyChanged}">
                            <Ellipse Height="20" Width="20" Fill="Tomato"/>
                            <Image Source="Resources/exclamation_light.png" Height="15" Width="15" RenderOptions.BitmapScalingMode="Fant"/>
                        </Grid>
                    </StackPanel>

                </Grid>
            </GroupBox>
            <Button Grid.Column="1" Margin="10,7,0,0"  Height="30" Width="100" Command="{Binding button1Command}" Background="Transparent" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"
                    BorderThickness="0" Visibility="{Binding StartButtonVisibility, UpdateSourceTrigger=PropertyChanged}">
                <Border Background="PaleGreen" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4,4,4,4" Padding="2,2,2,2">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="2"
                                              ShadowDepth="2"
                                              Direction="225"
                                              Color="Black"
                                              Opacity="0.4" />
                    </Border.Effect>
                    <TextBlock Text = "Convert dose" IsEnabled="{Binding isButtonEnabled, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,5,0">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <Trigger Property="TextBlock.IsMouseOver" Value="True">
                                        <Setter Property="TextBlock.FontWeight" Value="Bold"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Border>
            </Button>
        </Grid>
    </Grid>
</Window>
